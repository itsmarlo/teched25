# ====== Base image ======
ARG BASE_IMAGE=python:3.10-slim
FROM ${BASE_IMAGE}

# ====== Environment configuration ======
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    HF_HOME=/tmp/hf_cache \
    TRANSFORMERS_CACHE=/tmp/hf_cache \
    DATA_DIR=/mnt/data \
    OUTPUT_DIR=/mnt/models

# ====== System setup ======
RUN apt-get update && apt-get install -y --no-install-recommends tini git && rm -rf /var/lib/apt/lists/*

# ====== Set working directory ======
WORKDIR /app

# ====== Install Python dependencies ======
COPY requirements-train.txt /app/requirements-train.txt

# Upgrade pip and install safe versions (Torch 2.6+ fixes CVE-2025-32434)
RUN pip install --upgrade pip && \
    pip install --no-cache-dir \
        torch>=2.6.0 \
        transformers==4.44.2 \
        datasets==3.0.1 \
        scikit-learn==1.5.2 \
        pandas==2.2.3 \
        numpy==1.26.4 && \
    pip install -r /app/requirements-train.txt

# ====== Copy training code ======
COPY train.py /app/train.py

# ====== Create non-root user ======
RUN useradd -m appuser
USER appuser

ENTRYPOINT ["/usr/bin/tini", "--"]

# ====== Run training ======
CMD ["bash", "-lc", "mkdir -p /app/data && ln -sfn ${DATA_DIR:-/mnt/data} /app/data && mkdir -p ${OUTPUT_DIR:-/mnt/models} && python /app/train.py"]
