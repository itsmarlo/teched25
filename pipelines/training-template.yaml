apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: invoice-classifier-training
  annotations:
    scenarios.ai.sap.com/description: "Train invoice classifier model"
    scenarios.ai.sap.com/name: "invoice-classification"
    executables.ai.sap.com/description: "Training pipeline for invoice classification"
    executables.ai.sap.com/name: "training"
    artifacts.ai.sap.com/invoicesdataset.kind: "dataset"
    artifacts.ai.sap.com/invoiceclassifiermodel.kind: "model"
    artifacts.ai.sap.com/evalmetrics.kind: "metrics"
  labels:
    scenarios.ai.sap.com/id: "invoice-classification"
    ai.sap.com/version: "1.0.0"
spec:
  imagePullSecrets:
    - name: docker-registry-secret
  entrypoint: training-pipeline
  arguments:
    parameters:
      - name: baseModel
        value: "microsoft/deberta-v3-base"
      - name: numEpochs
        value: "3"
      - name: learningRate
        value: "2e-5"
      - name: batchSize
        value: "16"
  templates:
    - name: training-pipeline
      inputs:
        artifacts:
          - name: invoicesdataset
            path: /app/data/
      steps:
        - - name: train-model
            template: model-training
            arguments:
              artifacts:
                - name: invoicesdataset
                  from: "{{inputs.artifacts.invoicesdataset}}"
        - - name: evaluate-model
            template: model-evaluation
            arguments:
              artifacts:
                - name: trainedModel
                  from: "{{steps.train-model.outputs.artifacts.trainedModel}}"
        - - name: save-model
            template: model-storage
            arguments:
              artifacts:
                - name: trainedModel
                  from: "{{steps.train-model.outputs.artifacts.trainedModel}}"
                - name: evalmetrics
                  from: "{{steps.evaluate-model.outputs.artifacts.evalmetrics}}"
    - name: model-training
      metadata:
        labels:
          ai.sap.com/resourcePlan: train.l
      inputs:
        artifacts:
          - name: invoicesdataset
            path: /app/data/
      outputs:
        artifacts:
          - name: trainedModel
            globalName: invoiceclassifiermodel
            path: /app/invoice_classifier/
            archive: { none: {} }
      container:
        image: docker.io/yourrepo/invoice-classifier-training:1.0.0
        command: ["python", "train_model.py"]
        args:
          - --output-dir
          - /app/invoice_classifier/
    - name: model-evaluation
      metadata:
        labels:
          ai.sap.com/resourcePlan: train.l
      inputs:
        artifacts:
          - name: trainedModel
            path: /app/model/
      outputs:
        artifacts:
          - name: evalmetrics
            globalName: evalmetrics
            path: /app/output/metrics/
            archive: { none: {} }
      container:
        image: docker.io/yourrepo/invoice-classifier-training:1.0.0
        command: ["python", "-c"]
        args:
          - |
            import json,os
            os.makedirs("/app/output/metrics/", exist_ok=True)
            # Placeholder. If you have evaluate.py, call it here.
            with open("/app/output/metrics/metrics.json","w") as f:
              json.dump({"note":"add evaluation here"}, f)
    - name: model-storage
      metadata:
        labels:
          ai.sap.com/resourcePlan: train.l
      inputs:
        artifacts:
          - name: trainedModel
            path: /app/final/model/
          - name: evalmetrics
            path: /app/final/metrics/
      container:
        image: docker.io/yourrepo/invoice-classifier-training:1.0.0
        command: ["/bin/sh","-lc"]
        args: ["echo 'Argo will upload artifacts'"]

