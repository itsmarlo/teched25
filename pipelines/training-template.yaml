apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: invoice-training-pipeline
  annotations:
    scenarios.ai.sap.com/name: "Blocked Invoice Classification (BYOM)"
    scenarios.ai.sap.com/description: "Train a Hugging Face model for blocked invoices"
    executables.ai.sap.com/name: "Invoice model training"
    executables.ai.sap.com/description: "Training with blocked-invoice dataset"
    artifacts.ai.sap.com/invoicesdataset.kind: "dataset"
    artifacts.ai.sap.com/invoiceclassifiermodel.kind: "model"
  labels:
    scenarios.ai.sap.com/id: "blocked-invoice-classifier"
    ai.sap.com/version: "1.0.0"
spec:
  imagePullSecrets:
    - name: docker-registry-secret
  entrypoint: mypipeline
  arguments:
    parameters:
      - name: BASE_MODEL
      - name: NUM_EPOCHS
      - name: LEARNING_RATE
      - name: BATCH_SIZE
      - name: NUM_LABELS
  templates:
  - name: mypipeline
    inputs:
      artifacts:
        - name: invoicesdataset
          path: /app/data/
    outputs:
      artifacts:
        - name: invoiceclassifiermodel
          globalName: invoiceclassifiermodel
          path: /app/invoice_classifier/
          archive:
            none: {}
    container:
      image: docker.io/itsmarlo/invoice-train:latest
      command: ["/bin/sh","-c"]
      env:
        - name: MODEL_NAME
          value: "{{workflow.parameters.BASE_MODEL}}"
        - name: NUM_EPOCHS
          value: "{{workflow.parameters.NUM_EPOCHS}}"
        - name: LEARNING_RATE
          value: "{{workflow.parameters.LEARNING_RATE}}"
        - name: BATCH_SIZE
          value: "{{workflow.parameters.BATCH_SIZE}}"
        - name: NUM_LABELS
          value: "{{workflow.parameters.NUM_LABELS}}"
        - name: OUTPUT_DIR
          value: "/app/invoice_classifier"
      args:
        - |
          set -e
          echo "=== Creating output directory ==="
          mkdir -p /app/invoice_classifier
          
          echo "=== Verifying input dataset ==="
          ls -la /app/data/
          
          echo "=== Starting training ==="
          python /app/train.py
          
          echo "=== Verifying output ==="
          ls -la /app/invoice_classifier/
          
          if [ -z "$(ls -A /app/invoice_classifier/)" ]; then
            echo "ERROR: Output directory is empty!"
            exit 1
          fi
          
          echo "=== Training completed successfully ==="
